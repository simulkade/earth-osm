{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Earth-OSM Documentation This is the documentation for the Earth-OSM project. Earth-OSM is a project to create a global, open, and free map of the Earth using OpenStreetMap data. This documentation is a work in progress, and is intended to be a resource for anyone interested in the project.","title":"Welcome to Earth-OSM Documentation"},{"location":"#welcome-to-earth-osm-documentation","text":"This is the documentation for the Earth-OSM project. Earth-OSM is a project to create a global, open, and free map of the Earth using OpenStreetMap data. This documentation is a work in progress, and is intended to be a resource for anyone interested in the project.","title":"Welcome to Earth-OSM Documentation"},{"location":"api-docs/","text":"API Overview Modules args clean config eo extract filter gfk_data gfk_download osmpbf utils Classes osmpbf.Node : Node(id, tags, lonlat) osmpbf.Relation : Relation(id, tags, members) osmpbf.Way : Way(id, tags, refs) Functions args.main : The main function executes on commands: eo.save_osm_data : Get OSM Data for a list of regions and features eo.process_country : Process Country extract.filter_file_block extract.filter_pbf : Parallized pre-Filtering of OSM file by a pre_filter extract.id_filter extract.pool_file_query : returns query function that accepts a filter function and returns a list of filtered entries extract.primary_entry_filter extract.way_filter filter.feature_filter filter.get_filtered_data filter.run_feature_filter filter.run_primary_filter gfk_data.get_all_regions_dict : It takes a level argument, and returns a dictionary of all regions, grouped by their parent region gfk_data.get_all_valid_list : Returns a list of all valid region ids gfk_data.get_code_by_id : Takes a region id (eg. germany) and returns its code (eg. DE) gfk_data.get_geom_sitemap gfk_data.get_id_by_code : Takes a region code (eg. DE) and returns its id (eg. germany) gfk_data.get_id_by_str : Takes a region id or code (eg. DE, germany) and returns its id (eg. germany) gfk_data.get_region_dict : Takes a region id (eg. germany) and returns a ditctionary consisting of gfk_data.get_region_tuple : Takes a region id or code (eg. DE, germany) and returns a named tuple with gfk_data.get_root_list : Returns a list of regions without parents (i.e continents) gfk_data.view_regions : Takes the all_regions dictionary and returns a new dictionary with the same keys, but with gfk_download.download_pbf gfk_download.download_sitemap gfk_download.earth_downloader : Download file from url to dir utils.convert_pd_to_gdf_lines : Convert Lines Pandas Dataframe to GeoPandas Dataframe utils.convert_pd_to_gdf_nodes : Convert Nodes Pandas Dataframe to GeoPandas Dataframe utils.convert_ways_lines : Convert Ways to Line Coordinates utils.convert_ways_points : Convert Ways to Point Coordinates utils.lonlat_lookup : Lookup refs and convert to list of longlats utils.output_csv_geojson : Output CSV and GeoJSON files for each region","title":"Index"},{"location":"api-docs/#api-overview","text":"","title":"API Overview"},{"location":"api-docs/#modules","text":"args clean config eo extract filter gfk_data gfk_download osmpbf utils","title":"Modules"},{"location":"api-docs/#classes","text":"osmpbf.Node : Node(id, tags, lonlat) osmpbf.Relation : Relation(id, tags, members) osmpbf.Way : Way(id, tags, refs)","title":"Classes"},{"location":"api-docs/#functions","text":"args.main : The main function executes on commands: eo.save_osm_data : Get OSM Data for a list of regions and features eo.process_country : Process Country extract.filter_file_block extract.filter_pbf : Parallized pre-Filtering of OSM file by a pre_filter extract.id_filter extract.pool_file_query : returns query function that accepts a filter function and returns a list of filtered entries extract.primary_entry_filter extract.way_filter filter.feature_filter filter.get_filtered_data filter.run_feature_filter filter.run_primary_filter gfk_data.get_all_regions_dict : It takes a level argument, and returns a dictionary of all regions, grouped by their parent region gfk_data.get_all_valid_list : Returns a list of all valid region ids gfk_data.get_code_by_id : Takes a region id (eg. germany) and returns its code (eg. DE) gfk_data.get_geom_sitemap gfk_data.get_id_by_code : Takes a region code (eg. DE) and returns its id (eg. germany) gfk_data.get_id_by_str : Takes a region id or code (eg. DE, germany) and returns its id (eg. germany) gfk_data.get_region_dict : Takes a region id (eg. germany) and returns a ditctionary consisting of gfk_data.get_region_tuple : Takes a region id or code (eg. DE, germany) and returns a named tuple with gfk_data.get_root_list : Returns a list of regions without parents (i.e continents) gfk_data.view_regions : Takes the all_regions dictionary and returns a new dictionary with the same keys, but with gfk_download.download_pbf gfk_download.download_sitemap gfk_download.earth_downloader : Download file from url to dir utils.convert_pd_to_gdf_lines : Convert Lines Pandas Dataframe to GeoPandas Dataframe utils.convert_pd_to_gdf_nodes : Convert Nodes Pandas Dataframe to GeoPandas Dataframe utils.convert_ways_lines : Convert Ways to Line Coordinates utils.convert_ways_points : Convert Ways to Point Coordinates utils.lonlat_lookup : Lookup refs and convert to list of longlats utils.output_csv_geojson : Output CSV and GeoJSON files for each region","title":"Functions"},{"location":"api-docs/args/","text":"module args Global Variables primary_feature_element function main main() The main function executes on commands: python -m earth_osm and $ earth_osm . It parses the command line and executes the appropriate function.","title":"Args"},{"location":"api-docs/args/#module-args","text":"","title":"module args"},{"location":"api-docs/args/#global-variables","text":"primary_feature_element","title":"Global Variables"},{"location":"api-docs/args/#function-main","text":"main() The main function executes on commands: python -m earth_osm and $ earth_osm . It parses the command line and executes the appropriate function.","title":"function main"},{"location":"api-docs/clean/","text":"module clean","title":"Clean"},{"location":"api-docs/clean/#module-clean","text":"","title":"module clean"},{"location":"api-docs/config/","text":"module config Global Variables primary_feature_element columns_basic columns_substation columns_generator columns_line columns_cable columns_tower feature_columns","title":"Config"},{"location":"api-docs/config/#module-config","text":"","title":"module config"},{"location":"api-docs/config/#global-variables","text":"primary_feature_element columns_basic columns_substation columns_generator columns_line columns_cable columns_tower feature_columns","title":"Global Variables"},{"location":"api-docs/eo/","text":"module eo Global Variables primary_feature_element function process_country process_country(region, primary_name, feature_name, mp, update, data_dir) Process Country Args: region : Region object primary_name : Primary Feature Name feature_name : Feature Name mp : Multiprocessing object update : Update flag Returns: None function save_osm_data save_osm_data( region_list=['germany'], primary_name='power', feature_list=['tower'], update=False, mp=True, data_dir='/home/matin/earth-osm/earth_data' ) Get OSM Data for a list of regions and features args: region_list : list of regions to get data for primary_name : primary feature to get data for feature_list : list of features to get data for update : update data mp : use multiprocessing returns: dict of dataframes","title":"Eo"},{"location":"api-docs/eo/#module-eo","text":"","title":"module eo"},{"location":"api-docs/eo/#global-variables","text":"primary_feature_element","title":"Global Variables"},{"location":"api-docs/eo/#function-process_country","text":"process_country(region, primary_name, feature_name, mp, update, data_dir) Process Country Args: region : Region object primary_name : Primary Feature Name feature_name : Feature Name mp : Multiprocessing object update : Update flag Returns: None","title":"function process_country"},{"location":"api-docs/eo/#function-save_osm_data","text":"save_osm_data( region_list=['germany'], primary_name='power', feature_list=['tower'], update=False, mp=True, data_dir='/home/matin/earth-osm/earth_data' ) Get OSM Data for a list of regions and features args: region_list : list of regions to get data for primary_name : primary feature to get data for feature_list : list of features to get data for update : update data mp : use multiprocessing returns: dict of dataframes","title":"function save_osm_data"},{"location":"api-docs/extract/","text":"module extract function primary_entry_filter primary_entry_filter(entry, pre_filter) function id_filter id_filter(entry, idset) function way_filter way_filter(entry, way_relation_members) function filter_file_block filter_file_block(filename, ofs, header, filter_func, args, kwargs) function pool_file_query pool_file_query(filename, pool) returns query function that accepts a filter function and returns a list of filtered entries function filter_pbf filter_pbf(filename, pre_filter, multiprocess=True) Parallized pre-Filtering of OSM file by a pre_filter Args: filename : PBF file pre_filter: Returns: targetname : JSON-file","title":"Extract"},{"location":"api-docs/extract/#module-extract","text":"","title":"module extract"},{"location":"api-docs/extract/#function-primary_entry_filter","text":"primary_entry_filter(entry, pre_filter)","title":"function primary_entry_filter"},{"location":"api-docs/extract/#function-id_filter","text":"id_filter(entry, idset)","title":"function id_filter"},{"location":"api-docs/extract/#function-way_filter","text":"way_filter(entry, way_relation_members)","title":"function way_filter"},{"location":"api-docs/extract/#function-filter_file_block","text":"filter_file_block(filename, ofs, header, filter_func, args, kwargs)","title":"function filter_file_block"},{"location":"api-docs/extract/#function-pool_file_query","text":"pool_file_query(filename, pool) returns query function that accepts a filter function and returns a list of filtered entries","title":"function pool_file_query"},{"location":"api-docs/extract/#function-filter_pbf","text":"filter_pbf(filename, pre_filter, multiprocess=True) Parallized pre-Filtering of OSM file by a pre_filter Args: filename : PBF file pre_filter: Returns: targetname : JSON-file","title":"function filter_pbf"},{"location":"api-docs/filter/","text":"module filter Global Variables primary_feature_element function feature_filter feature_filter(primary_data, filter_tuple=('power', 'line')) function run_feature_filter run_feature_filter(primary_dict, feature_name) function run_primary_filter run_primary_filter(PBF_inputfile, primary_file, primary_name, multiprocess) function get_filtered_data get_filtered_data(region, primary_name, feature_name, mp, update, data_dir)","title":"Filter"},{"location":"api-docs/filter/#module-filter","text":"","title":"module filter"},{"location":"api-docs/filter/#global-variables","text":"primary_feature_element","title":"Global Variables"},{"location":"api-docs/filter/#function-feature_filter","text":"feature_filter(primary_data, filter_tuple=('power', 'line'))","title":"function feature_filter"},{"location":"api-docs/filter/#function-run_feature_filter","text":"run_feature_filter(primary_dict, feature_name)","title":"function run_feature_filter"},{"location":"api-docs/filter/#function-run_primary_filter","text":"run_primary_filter(PBF_inputfile, primary_file, primary_name, multiprocess)","title":"function run_primary_filter"},{"location":"api-docs/filter/#function-get_filtered_data","text":"get_filtered_data(region, primary_name, feature_name, mp, update, data_dir)","title":"function get_filtered_data"},{"location":"api-docs/gfk_data/","text":"module gfk_data Global Variables pkg_data_dir sitemap f d row_list feature function get_geom_sitemap get_geom_sitemap() function get_root_list get_root_list() Returns a list of regions without parents (i.e continents) function get_all_valid_list get_all_valid_list() Returns a list of all valid region ids function get_all_regions_dict get_all_regions_dict(level=0) It takes a level argument, and returns a dictionary of all regions, grouped by their parent region Args: level : 0 = all regions, 1 = world regions, 2 = local regions, defaults to 0 A dictionary of dictionaries. function view_regions view_regions(level=0) Takes the all_regions dictionary and returns a new dictionary with the same keys, but with the values being the region_id s of the regions function get_region_dict get_region_dict(id) Takes a region id (eg. germany) and returns a ditctionary consisting of strings 'id', 'name', 'parent', 'short_code' and dictionary of 'urls' Raises error if id is not found function get_id_by_code get_id_by_code(code) Takes a region code (eg. DE) and returns its id (eg. germany) Supresses error if id is not found function get_code_by_id get_code_by_id(id) Takes a region id (eg. germany) and returns its code (eg. DE) Supresses error if id is not found function get_id_by_str get_id_by_str(region_str) Takes a region id or code (eg. DE, germany) and returns its id (eg. germany) Raises error if the string is not a valid id or code function get_region_tuple get_region_tuple(region_str) Takes a region id or code (eg. DE, germany) and returns a named tuple with 'id', 'name', 'short', 'parent', 'short_code' and dictionary of 'urls' The 'short' field is an iso code if found otherwise the id is used. iso3166-1:alpha2 is used for countries, iso3166-2 is used for sub-divisions Raises error if the string is not a valid id or code","title":"Gfk data"},{"location":"api-docs/gfk_data/#module-gfk_data","text":"","title":"module gfk_data"},{"location":"api-docs/gfk_data/#global-variables","text":"pkg_data_dir sitemap f d row_list feature","title":"Global Variables"},{"location":"api-docs/gfk_data/#function-get_geom_sitemap","text":"get_geom_sitemap()","title":"function get_geom_sitemap"},{"location":"api-docs/gfk_data/#function-get_root_list","text":"get_root_list() Returns a list of regions without parents (i.e continents)","title":"function get_root_list"},{"location":"api-docs/gfk_data/#function-get_all_valid_list","text":"get_all_valid_list() Returns a list of all valid region ids","title":"function get_all_valid_list"},{"location":"api-docs/gfk_data/#function-get_all_regions_dict","text":"get_all_regions_dict(level=0) It takes a level argument, and returns a dictionary of all regions, grouped by their parent region Args: level : 0 = all regions, 1 = world regions, 2 = local regions, defaults to 0 A dictionary of dictionaries.","title":"function get_all_regions_dict"},{"location":"api-docs/gfk_data/#function-view_regions","text":"view_regions(level=0) Takes the all_regions dictionary and returns a new dictionary with the same keys, but with the values being the region_id s of the regions","title":"function view_regions"},{"location":"api-docs/gfk_data/#function-get_region_dict","text":"get_region_dict(id) Takes a region id (eg. germany) and returns a ditctionary consisting of strings 'id', 'name', 'parent', 'short_code' and dictionary of 'urls' Raises error if id is not found","title":"function get_region_dict"},{"location":"api-docs/gfk_data/#function-get_id_by_code","text":"get_id_by_code(code) Takes a region code (eg. DE) and returns its id (eg. germany) Supresses error if id is not found","title":"function get_id_by_code"},{"location":"api-docs/gfk_data/#function-get_code_by_id","text":"get_code_by_id(id) Takes a region id (eg. germany) and returns its code (eg. DE) Supresses error if id is not found","title":"function get_code_by_id"},{"location":"api-docs/gfk_data/#function-get_id_by_str","text":"get_id_by_str(region_str) Takes a region id or code (eg. DE, germany) and returns its id (eg. germany) Raises error if the string is not a valid id or code","title":"function get_id_by_str"},{"location":"api-docs/gfk_data/#function-get_region_tuple","text":"get_region_tuple(region_str) Takes a region id or code (eg. DE, germany) and returns a named tuple with 'id', 'name', 'short', 'parent', 'short_code' and dictionary of 'urls' The 'short' field is an iso code if found otherwise the id is used. iso3166-1:alpha2 is used for countries, iso3166-2 is used for sub-divisions Raises error if the string is not a valid id or code","title":"function get_region_tuple"},{"location":"api-docs/gfk_download/","text":"module gfk_download function earth_downloader earth_downloader(url, dir) Download file from url to dir Args: url (str): url to download dir (str): directory to download to Returns: str : filepath of downloaded file function download_pbf download_pbf(url, update, data_dir) function download_sitemap download_sitemap(geom, pkg_data_dir)","title":"Gfk download"},{"location":"api-docs/gfk_download/#module-gfk_download","text":"","title":"module gfk_download"},{"location":"api-docs/gfk_download/#function-earth_downloader","text":"earth_downloader(url, dir) Download file from url to dir Args: url (str): url to download dir (str): directory to download to Returns: str : filepath of downloaded file","title":"function earth_downloader"},{"location":"api-docs/gfk_download/#function-download_pbf","text":"download_pbf(url, update, data_dir)","title":"function download_pbf"},{"location":"api-docs/gfk_download/#function-download_sitemap","text":"download_sitemap(geom, pkg_data_dir)","title":"function download_sitemap"},{"location":"api-docs/osmpbf/","text":"module osmpbf class Node Node(id, tags, lonlat) class Relation Relation(id, tags, members) class Way Way(id, tags, refs)","title":"Osmpbf"},{"location":"api-docs/osmpbf/#module-osmpbf","text":"","title":"module osmpbf"},{"location":"api-docs/osmpbf/#class-node","text":"Node(id, tags, lonlat)","title":"class Node"},{"location":"api-docs/osmpbf/#class-relation","text":"Relation(id, tags, members)","title":"class Relation"},{"location":"api-docs/osmpbf/#class-way","text":"Way(id, tags, refs)","title":"class Way"},{"location":"api-docs/utils/","text":"module utils Global Variables primary_feature_element function lonlat_lookup lonlat_lookup(df_way, primary_data) Lookup refs and convert to list of longlats function convert_ways_points convert_ways_points(df_way, primary_data) Convert Ways to Point Coordinates function convert_ways_lines convert_ways_lines(df_way, primary_data) Convert Ways to Line Coordinates Args: function convert_pd_to_gdf_nodes convert_pd_to_gdf_nodes(df_way) Convert Nodes Pandas Dataframe to GeoPandas Dataframe Args: df_way : Pandas Dataframe Returns: GeoPandas Dataframe function convert_pd_to_gdf_lines convert_pd_to_gdf_lines(df_way) Convert Lines Pandas Dataframe to GeoPandas Dataframe Args: df_way : Pandas Dataframe Returns: GeoPandas Dataframe function output_csv_geojson output_csv_geojson( df_feature, primary_name, feature_name, region_list, data_dir ) Output CSV and GeoJSON files for each region Args: df_feature : description primary_name : description feature_name : description region_list : description","title":"Utils"},{"location":"api-docs/utils/#module-utils","text":"","title":"module utils"},{"location":"api-docs/utils/#global-variables","text":"primary_feature_element","title":"Global Variables"},{"location":"api-docs/utils/#function-lonlat_lookup","text":"lonlat_lookup(df_way, primary_data) Lookup refs and convert to list of longlats","title":"function lonlat_lookup"},{"location":"api-docs/utils/#function-convert_ways_points","text":"convert_ways_points(df_way, primary_data) Convert Ways to Point Coordinates","title":"function convert_ways_points"},{"location":"api-docs/utils/#function-convert_ways_lines","text":"convert_ways_lines(df_way, primary_data) Convert Ways to Line Coordinates Args:","title":"function convert_ways_lines"},{"location":"api-docs/utils/#function-convert_pd_to_gdf_nodes","text":"convert_pd_to_gdf_nodes(df_way) Convert Nodes Pandas Dataframe to GeoPandas Dataframe Args: df_way : Pandas Dataframe Returns: GeoPandas Dataframe","title":"function convert_pd_to_gdf_nodes"},{"location":"api-docs/utils/#function-convert_pd_to_gdf_lines","text":"convert_pd_to_gdf_lines(df_way) Convert Lines Pandas Dataframe to GeoPandas Dataframe Args: df_way : Pandas Dataframe Returns: GeoPandas Dataframe","title":"function convert_pd_to_gdf_lines"},{"location":"api-docs/utils/#function-output_csv_geojson","text":"output_csv_geojson( df_feature, primary_name, feature_name, region_list, data_dir ) Output CSV and GeoJSON files for each region Args: df_feature : description primary_name : description feature_name : description region_list : description","title":"function output_csv_geojson"}]}